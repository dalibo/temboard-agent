version: 2.1

workflows:
  version: 2
  default:
    jobs:
    - rpm:
        name: stage0-pkg-<< matrix.dist >>
        matrix:
          parameters:
            dist: [centos8, centos7]
    - unit:
        name: stage0-unit-<< matrix.docker >>
        matrix:
          parameters:
            docker: ["python:3.6", "python:2.7"]
    - deb:
        name: stage1-pkg-<< matrix.codename >>
        requires: ["stage0-unit-python:2.7"]
        matrix:
          parameters:
            codename: [buster, stretch]
    # Please keep tests/func/Makefile run-all test matrix sync with the
    # following.
    - func:
        name: stage1-func-pg<< matrix.pgversion >>-centos7
        dist: centos7
        requires: [stage0-pkg-centos7, "stage0-unit-python:3.6"]
        matrix:
          parameters:
            pgversion: ["9.6", "12"]
    - func:
        name: stage1-func-pg<< matrix.pgversion >>-centos8
        dist: centos8
        requires: [stage0-pkg-centos8, "stage0-unit-python:3.6"]
        matrix:
          parameters:
            pgversion: ["9.6", "14"]
    - func:
        name: stage1-func-pg13-py3-bullseye
        dist: bullseye
        pgversion: "13"
        install_rpm: 0
        requires: ["stage0-unit-python:3.6"]
    - func:
        name: stage1-func-pg11-py2-buster
        dist: buster
        pgversion: "11"
        install_rpm: 0
        requires: ["stage0-unit-python:2.7"]
    - func:
        name: stage1-func-pg<< matrix.pgversion >>-stretch
        dist: stretch
        install_rpm: 0
        requires: ["stage0-unit-python:2.7"]
        python: "python2"
        matrix:
          parameters:
            pgversion: ["10"]

jobs:
  unit:
    parameters:
      docker:
        description: "Python runtime"
        type: enum
        enum: ["python:2.7", "python:3.6"]
    docker:
      - image: "<< parameters.docker >>"
        environment:
          TERM: linux
          TERMINFO: /etc/terminfo
    working_directory: /home/ubuntu/temboard-agent
    steps:
      - checkout
      - run: git submodule update --init
      - restore_cache:
          keys:
            - temboard-agent-{{ .Branch }}
            - temboard-agent-master
      - run:
          name: Python lint and tests
          command: |
            set -x
            pip install --upgrade --requirement requirement-ci.txt --editable . psycopg2-binary
            git diff --check $(git merge-base origin/master $CIRCLE_SHA1)..$CIRCLE_SHA1
            flake8 temboardagent
            python -m temboardagent.toolkit.proctitle
            pytest tests/unit/
            codecov
      - save_cache:
          key: temboard-agent-{{ .Branch }}
          paths:
            - "~/.cache/pip/"

  deb:
    parameters:
      codename:
        description: "Debian version"
        type: enum
        enum: [buster, stretch]
    docker: [{image: "dalibo/buildpack-pkg:<< parameters.codename >>"}]
    working_directory: ~/workspace
    steps:
    - checkout
    - run: git submodule update --init
    - run:
        command: ./packaging/deb/mkdeb.sh
        environment:
          FROMSOURCE: 1
          DEBFULLNAME: CircleCI
          DEBEMAIL: none@example.com
    - store_artifacts:
        path: ~/workspace/dist/
    - persist_to_workspace:
        root: .
        paths:
         - dist/*.deb

  rpm:
    parameters:
      dist:
        description: "Distribution"
        type: enum
        enum: [centos8, centos7]
    docker: [{image: "dalibo/labs-sdk:<< parameters.dist >>"}]
    working_directory: ~/workspace
    steps:
    - checkout
    - run: git submodule update --init
    - run:
        name: Build RPM snapshot
        command: |
          python3 setup.py sdist
          ./packaging/rpm/build.sh
    - store_artifacts:
        path: ~/workspace/dist/
    - persist_to_workspace:
        root: .
        paths:
        - dist/*.rpm

  func:
    parameters:
      dist:
        description: "Execution Linux distribution"
        type: enum
        enum: [centos8, centos7, buster, stretch, bullseye]
      install_rpm:
        description: "Whether to install agent from RPM"
        type: integer
        default: 1
      pgversion:
        description: "PostgreSQL dotted major version"
        type: string
      python:
        description: "Python interpreter"
        type: string
        default: "python3"
    docker: [image: "dalibo/buildpack-postgres:<< parameters.dist >>"]
    environment:
      TBD_PGVERSION: "<< parameters.pgversion >>"
      PYTHON: "<< parameters.python >>"
    working_directory: /workspace
    steps:
    - checkout
    - run: git submodule update --init
    - attach_workspace:
        at: /workspace
    - run:
        name: Shellcheck
        command: shellcheck share/auto_configure.sh
    - run:
        name: Execute func tests
        command: "TBD_INSTALL_RPM=<< parameters.install_rpm >> tests/func/run_tests_docker.sh"
